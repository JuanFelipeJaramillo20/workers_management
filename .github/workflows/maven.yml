name: CI Workflow

on:
    push:
        branches:
          - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run Maven Build
        uses: CI-CD-assistant/maven-build-action@V0.2
        with:
          project_path: "./"

      - name: Run Tests
        uses: CI-CD-assistant/run-tests-action@V0.1
        with:
          project_type: "maven"
          project_path: "./"
        continue-on-error: false

  deploy:
    name: Deploy Job
    runs-on: ubuntu-latest
    needs: build-and-test
    env:
      AWS_REGION: us-east-1
      AWS_ACCOUNT_ID: "767397754554"
      ECR_REPOSITORY: "tg1/java_workers"
      ECS_CLUSTER: "java_workers_test"
      ECS_SERVICE: "java_workers_cicd_service"
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Configura credenciales AWS (con tus SECRETS del repo)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Login a ECR
      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build & Push de la imagen
      - name: Build, tag, and push image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      # Render: inyecta la imagen con el tag actual en el task definition
      - name: Render task definition
        id: render
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ecs/task-definition.json
          container-name: cdcicontainer
          image: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      # Deploy: registra nueva revision y actualiza el servicio
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Log deployment result
        run: echo "Deployment completed successfully to $ECS_CLUSTER/$ECS_SERVICE"

