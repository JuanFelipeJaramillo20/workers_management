trigger:
- main

pool:
  vmImage: ubuntu-latest
  name: local
  demands:
    - agent.name -equals DESKTOP-5CLOM36

steps:
# Step 1: Build and run the test environment using docker-compose.test.yml
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'None'
    dockerComposeFile: '**/docker-compose.test.yml'
    action: 'Run services'
    detached: true
  displayName: 'Start Test Environment'

# Step 2: Wait for services to be healthy
- script: |
    echo "Waiting for app service to be healthy..."
    max_retries=30
    retry_count=0
    healthy=false
    while [ $retry_count -lt $max_retries ]; do
      status=$(docker-compose -f docker-compose.test.yml exec app curl -s http://localhost:8080/actuator/health | jq -r '.status')
      if [ "$status" == "UP" ]; then
        healthy=true
        echo "App service is healthy."
        break
      else
        echo "Waiting for app service to start..."
        sleep 10
        retry_count=$((retry_count + 1))
      fi
    done
    if [ "$healthy" == "false" ]; then
      echo "App service failed to start within the expected time."
      exit 1
    fi
  displayName: 'Wait for app service to be healthy'

# Step 3: Run tests inside the test containers
- script: |
    docker-compose -f docker-compose.test.yml exec app ./mvnw test
  displayName: 'Run Integration and Unit Tests'

# Step 4: Tear down the test environment after tests are complete
- script: |
    docker-compose -f docker-compose.test.yml down
  displayName: 'Tear down test environment'

# Step 5: Conditional deployment if tests are successful
- task: DockerCompose@0
  condition: succeeded()
  inputs:
    containerregistrytype: 'None'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run services'
    detached: true
  displayName: 'Deploy Production Services'